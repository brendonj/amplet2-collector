#!/bin/sh
# postinst script for amplet2-collector
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        V=`dpkg -s rabbitmq-server | grep "Version:" | cut -d ' ' -f 2`

        # Enable the ssl authentication plugin for rabbitmq
        if ! rabbitmq-plugins list -e rabbitmq_auth_mechanism_ssl | \
                cut -d ' ' -f 2 | grep -qx rabbitmq_auth_mechanism_ssl; then

            rabbitmq-plugins enable rabbitmq_auth_mechanism_ssl || exit $?

            # restart rabbitmq-server if version is < 3.4.0
            if dpkg --compare-versions "$V" lt "3.4.0"; then
                if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                    invoke-rc.d rabbitmq-server restart || exit $?
                else
                    /etc/init.d/rabbitmq-server restart || exit $?
                fi
            fi
        fi

        # If the amp_exchange exists then assume we have already set it up the
        # way we want it and make no further changes. If it doesn't exist then
        # set up the exchange, queues, bindings etc
        if ! rabbitmqctl list_exchanges | \
                cut -f 1 | grep -qx amp_exchange; then

            # rabbitmqctl doesn't currently have commands for creating anything
            # useful except users and vhosts. I don't want to have to enable the
            # management plugin and use rabbitmqadmin just to run a couple of
            # simple commands, so we will eval them directly and hope the API
            # doesn't change...

            # rabbitmq from 3.7.0 onwards requires an extra parameter to say
            # which user is performing the action, set it to none
            USER=
            if dpkg --compare-versions "$V" ge "3.7.0"; then
                USER=", none"
            fi

            # create the exchange "amp_exchange" as direct, durable, extern
            rabbitmqctl eval "rabbit_exchange:declare(rabbit_misc:r(<<\"/\">>, exchange, <<\"amp_exchange\">>), direct, true, false, false, []${USER})." > /dev/null
            # create the queue "ampqueue" as durable, persistant, no owner
            rabbitmqctl eval "rabbit_amqqueue:declare(rabbit_misc:r(<<\"/\">>, queue, <<\"ampqueue\">>), true, false, [], none${USER})." > /dev/null
            # bind the queue to the exchange with routing key "amp"
            rabbitmqctl eval "rabbit_binding:add({binding, Source = rabbit_misc:r(<<\"/\">>, exchange, <<\"amp_exchange\">>), Key = <<\"amp\">>, Destination = rabbit_misc:r(<<\"/\">>, queue, <<\"ampqueue\">>), Args = []}${USER})." > /dev/null

        fi

        # TODO what should the user be called?
        # TODO should this and amplet2-client share a directory?
        # ensure the amplet system user exists
        if ! getent passwd amplet > /dev/null; then
            adduser --quiet --system --group --no-create-home --home /etc/amplet2 amplet
        fi

        # TODO do we need an influx user?
        # create the influx database, this should be idempotent
        influx -execute 'CREATE DATABASE amp'
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
