#!/bin/sh
# postinst script for amplet2-collector
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

table_exists()
{
    if [ $# -ne 2 ]; then
        echo "table_exists() expects 2 arguments, $# given"
        exit 1
    fi

    su postgres -c "psql -d $1 -tAc \
        \"SELECT 1 FROM information_schema.tables \
        WHERE table_name='$2'\" | grep -q 1"
}

grant_permissions()
{
    if [ $# -ne 3 ]; then
        echo "grant_permissions() expects 3 arguments, $# given"
        exit 1
    fi

    su postgres -c "psql -d $1 -q -c \
        \"GRANT SELECT ON TABLE $2 TO \\\"$3\\\";\" || true"
}

case "$1" in
    configure)
        V=`dpkg -s rabbitmq-server | grep "Version:" | cut -d ' ' -f 2`

        # Enable the ssl authentication plugin for rabbitmq
        if ! rabbitmq-plugins list -e rabbitmq_auth_mechanism_ssl | \
                cut -d ' ' -f 2 | grep -qx rabbitmq_auth_mechanism_ssl; then

            rabbitmq-plugins enable rabbitmq_auth_mechanism_ssl || exit $?

            # restart rabbitmq-server if version is < 3.4.0
            if dpkg --compare-versions "$V" lt "3.4.0"; then
                if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                    invoke-rc.d rabbitmq-server restart || exit $?
                else
                    /etc/init.d/rabbitmq-server restart || exit $?
                fi
            fi
        fi

        # If the amp_exchange exists then assume we have already set it up the
        # way we want it and make no further changes. If it doesn't exist then
        # set up the exchange, queues, bindings etc
        if ! rabbitmqctl list_exchanges | \
                cut -f 1 | grep -qx amp_exchange; then

            # rabbitmqctl doesn't currently have commands for creating anything
            # useful except users and vhosts. I don't want to have to enable the
            # management plugin and use rabbitmqadmin just to run a couple of
            # simple commands, so we will eval them directly and hope the API
            # doesn't change...

            # rabbitmq from 3.7.0 onwards requires an extra parameter to say
            # which user is performing the action, set it to none
            USER=
            if dpkg --compare-versions "$V" ge "3.7.0"; then
                USER=", none"
            fi

            # create the exchange "amp_exchange" as direct, durable, extern
            rabbitmqctl eval "rabbit_exchange:declare(rabbit_misc:r(<<\"/\">>, exchange, <<\"amp_exchange\">>), direct, true, false, false, []${USER})." > /dev/null
            # create the queue "ampqueue" as durable, persistant, no owner
            rabbitmqctl eval "rabbit_amqqueue:declare(rabbit_misc:r(<<\"/\">>, queue, <<\"ampqueue\">>), true, false, [], none${USER})." > /dev/null
            # bind the queue to the exchange with routing key "amp"
            rabbitmqctl eval "rabbit_binding:add({binding, Source = rabbit_misc:r(<<\"/\">>, exchange, <<\"amp_exchange\">>), Key = <<\"amp\">>, Destination = rabbit_misc:r(<<\"/\">>, queue, <<\"ampqueue\">>), Args = []}${USER})." > /dev/null

        fi

        # TODO what should the user be called?
        # TODO should this and amplet2-client share a directory?
        # ensure the amplet system user exists
        if ! getent passwd ampweb > /dev/null; then
            adduser --quiet --system --group --no-create-home --home /etc/ampweb ampweb
        fi

        # TODO do we need an influx user?
        # create the influx database, this should be idempotent
        influx -execute 'CREATE DATABASE amp'
        influx -execute 'CREATE RETENTION POLICY grafana ON amp DURATION 365d REPLICATION 1 DEFAULT' || true

        # create the postgres database user if required
        su postgres -c "psql -tAc \"SELECT 1 FROM pg_roles WHERE rolname='ampweb'\" | grep -q 1 || createuser --no-createdb --no-createrole --no-superuser ampweb"

        # check if the database exists, it might exist from other amp packages
        if su postgres -c "psql --list | cut -d ' ' -f 2 | grep -qx ampmeta"; then

            # if it already exists check if it has the new views
            if ! table_exists ampmeta sources; then
                su postgres -c "psql -d ampmeta -q -c           \
                    \"CREATE VIEW sources AS SELECT             \
                    member.member_ampname                       \
                    FROM member JOIN mesh ON                    \
                    (mesh.mesh_name=member.member_meshname)     \
                    WHERE mesh.mesh_is_src=true;\" || true"
                grant_permissions ampmeta sources ampweb
            fi

            if ! table_exists ampmeta destinations; then
                su postgres -c "psql -d ampmeta -q -c           \
                    \"CREATE VIEW destinations AS SELECT        \
                    member.member_ampname                       \
                    FROM member JOIN mesh ON                    \
                    (mesh.mesh_name=member.member_meshname)     \
                    WHERE mesh.mesh_is_dst=true;\" || true"
                grant_permissions ampmeta destinations ampweb
            fi
        else
            # install new database from scratch
            su postgres -c "createdb -O ampweb ampmeta && \
                zcat /usr/share/amplet2-collector/meta.sql.gz | psql -q -d ampmeta"
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
